version: '3.8'

services:
  # Ctrl-Alt-Play Panel Application
  ctrl-alt-play:
    build: .
    container_name: ctrl-alt-play-panel
    restart: unless-stopped
    ports:
      - "3000:3000"  # Web interface
      - "8080:8080"  # Agent WebSocket port
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://ctrlaltplay:${POSTGRES_PASSWORD:-ctrlaltplay}@postgres:5432/ctrlaltplay
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-change-this-in-production}
      - AGENT_SECRET=${AGENT_SECRET:-change-this-agent-secret}
      - PORT=3000
      - AGENT_PORT=8080
    volumes:
      - ./uploads:/app/uploads:rw
      - ./logs:/app/logs:rw
      - ./data:/app/data:rw
    depends_on:
      - postgres
      - redis
    networks:
      - ctrl-alt-play-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ctrl-alt-play-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ctrlaltplay
      - POSTGRES_USER=ctrlaltplay
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-ctrlaltplay}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "127.0.0.1:5432:5432"  # Only bind to localhost for security
    networks:
      - ctrl-alt-play-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ctrlaltplay"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ctrl-alt-play-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"  # Only bind to localhost for security
    networks:
      - ctrl-alt-play-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Production ready)
  nginx:
    image: nginx:alpine
    container_name: ctrl-alt-play-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx:rw
    depends_on:
      - ctrl-alt-play
    networks:
      - ctrl-alt-play-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ctrl-alt-play-network:
    driver: bridge
